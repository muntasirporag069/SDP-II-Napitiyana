import 'package:barber_pogi/Admin/Admin_login.dart';
import 'package:barber_pogi/services/database.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

class AdminHome extends StatefulWidget {
  const AdminHome({super.key});

  @override
  State<AdminHome> createState() => _AdminHomeState();
}

class _AdminHomeState extends State<AdminHome> {
  Stream<QuerySnapshot>? userStream;
  Stream<QuerySnapshot>? barberStream;
  Stream<QuerySnapshot>? currentStream;
  String? shopemail;
  String? shopname;
  String? seat;
  String? email;
  String? username;

  final TextEditingController shopemailController = TextEditingController();
  final TextEditingController shopNameController = TextEditingController();
  final TextEditingController emailController = TextEditingController();
  final TextEditingController usernameController = TextEditingController();

  bool isuserSelected = true;

  @override
  void initState() {
    super.initState();
    getStreams();
  }

  void getStreams() {
    userStream = DatabaseMethods().getalluser();
    barberStream = DatabaseMethods().getallbarber();
    currentStream = userStream;
  }

  void changeBookingType(bool isUser) {
    setState(() {
      isuserSelected = isUser;
      currentStream = isUser ? userStream : barberStream;
    });
  }

  Widget allBookings() {
    if (currentStream == null) {
      return Center(child: CircularProgressIndicator());
    }

    return StreamBuilder<QuerySnapshot>(
      stream: currentStream,
      builder: (context, AsyncSnapshot<QuerySnapshot> snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return Center(child: CircularProgressIndicator());
        }
        if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {
          return Center(child: Text("None to Accept."));
        }

        return ListView.builder(
          padding: EdgeInsets.zero,
          itemCount: snapshot.data!.docs.length,
          scrollDirection: Axis.vertical,
          shrinkWrap: true,
          itemBuilder: (context, index) {
            DocumentSnapshot ds = snapshot.data!.docs[index];

            if (isuserSelected) {
              String username = ds["Name"] ?? "N/A";
              String email = ds["Email"] ?? "N/A";
              return Padding(
                padding: const EdgeInsets.symmetric(vertical: 8.0),
                child: Material(
                  elevation: 8.0,
                  borderRadius: BorderRadius.circular(60),
                  child: Container(
                    padding: EdgeInsets.all(10.0),
                    width: MediaQuery.of(context).size.width,
                    decoration: BoxDecoration(
                      gradient: LinearGradient(colors: [
                        Color(0XFFB91635),
                        Color(0xff621d3c),
                        Color(0xff311937),
                      ]),
                      borderRadius: BorderRadius.circular(60),
                    ),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Row(
                          children: [
                            SizedBox(width: 10.0),
                            Expanded(
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  SizedBox(height: 10.0),
                                  Text(
                                    "Username: $username",
                                    style: TextStyle(
                                        color: Colors.white,
                                        fontSize: 20.0,
                                        fontWeight: FontWeight.bold),
                                  ),
                                  SizedBox(height: 5.0),
                                  Text(
                                    "Email: $email",
                                    style: TextStyle(
                                        color: Colors.white,
                                        fontSize: 20.0,
                                        fontWeight: FontWeight.bold),
                                  ),
                                  SizedBox(height: 5.0),
                                ],
                              ),
                            ),
                            GestureDetector(
                              onTap: () async {
                                await DatabaseMethods().deleteUser(ds.id);
                              },
                              child: Container(
                                padding: EdgeInsets.all(10),
                                decoration: BoxDecoration(
                                    color: Color(0xFFdf711a),
                                    borderRadius: BorderRadius.circular(10.0)),
                                child: Text(
                                  "Cancel",
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontSize: 20.0,
                                      fontWeight: FontWeight.bold),
                                ),
                              ),
                            ),
                            SizedBox(width: 10.0),
                            GestureDetector(
                              onTap: () async {
                                await DatabaseMethods().updateUser(ds.id);
                              },
                              child: Container(
                                padding: EdgeInsets.all(10),
                                decoration: BoxDecoration(
                                    color: Color(0xFFdf711a),
                                    borderRadius: BorderRadius.circular(10.0)),
                                child: Text(
                                  "Confirm",
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontSize: 20.0,
                                      fontWeight: FontWeight.bold),
                                ),
                              ),
                            ),
                          ],
                        ),
                        SizedBox(height: 20.0),
                      ],
                    ),
                  ),
                ),
              );
            } else {
              String shopname = ds["Name"] ?? "N/A";
              String shopemail = ds["Email"] ?? "N/A";
              String seat = ds["Seat"] ?? "N/A";

              return Padding(
                padding: const EdgeInsets.symmetric(vertical: 8.0),
                child: Material(
                  elevation: 8.0,
                  borderRadius: BorderRadius.circular(60),
                  child: Container(
                    padding: EdgeInsets.all(10.0),
                    width: MediaQuery.of(context).size.width,
                    decoration: BoxDecoration(
                      gradient: LinearGradient(colors: [
                        Color(0XFFB91635),
                        Color(0xff621d3c),
                        Color(0xff311937),
                      ]),
                      borderRadius: BorderRadius.circular(60),
                    ),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Row(
                          children: [
                            SizedBox(width: 10.0),
                            Expanded(
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  SizedBox(height: 10.0),
                                  Text(
                                    "Shop Name: $shopname",
                                    style: TextStyle(
                                        color: Colors.white,
                                        fontSize: 20.0,
                                        fontWeight: FontWeight.bold),
                                  ),
                                  SizedBox(height: 10.0),
                                  Text(
                                    "Shop Email: $shopemail",
                                    style: TextStyle(
                                        color: Colors.white,
                                        fontSize: 20.0,
                                        fontWeight: FontWeight.bold),
                                  ),
                                  SizedBox(height: 5.0),
                                  Text(
                                    "Shop Seat: $seat",
                                    style: TextStyle(
                                        color: Colors.white,
                                        fontSize: 20.0,
                                        fontWeight: FontWeight.bold),
                                  ),
                                ],
                              ),
                            ),
                            GestureDetector(
                              onTap: () async {
                                await DatabaseMethods().deleteBarber(ds.id);
                              },
                              child: Container(
                                padding: EdgeInsets.all(10),
                                decoration: BoxDecoration(
                                    color: Color(0xFFdf711a),
                                    borderRadius: BorderRadius.circular(10.0)),
                                child: Text(
                                  "Cancel",
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontSize: 20.0,
                                      fontWeight: FontWeight.bold),
                                ),
                              ),
                            ),
                            GestureDetector(
                              onTap: () async {
                                await DatabaseMethods().updateBarber(ds.id);
                              },
                              child: Container(
                                padding: EdgeInsets.all(10),
                                decoration: BoxDecoration(
                                    color: Color(0xFFdf711a),
                                    borderRadius: BorderRadius.circular(10.0)),
                                child: Text(
                                  "Confirm",
                                  style: TextStyle(
                                      color: Colors.white,
                                      fontSize: 20.0,
                                      fontWeight: FontWeight.bold),
                                ),
                              ),
                            ),
                          ],
                        ),
                        SizedBox(height: 20.0),
                      ],
                    ),
                  ),
                ),
              );
            }
          },
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Stack(
          children: [
            // Brown and Maroon background with "S" shape curve
            Container(
              color: const Color(0xFF3E2723), // Brown background
            ),
            Positioned(
              bottom: 0,
              left: 0,
              right: 0,
              child: ClipPath(
                clipper: SShapeClipper(),
                child: Container(
                  height: MediaQuery.of(context).size.height * 0.75,
                  color: const Color(0xFF4E342E), // Maroon color
                ),
              ),
            ),
            Column(
              children: [
                // Top Section with Shopname
                Container(
                  padding: EdgeInsets.only(top: 50.0, left: 30.0),
                  height: MediaQuery.of(context).size.height / 5,
                  width: MediaQuery.of(context).size.width,
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      const Text(
                        "Welcome to ",
                        style: TextStyle(
                          color: Color.fromARGB(189, 0, 0, 0),
                          fontSize: 24.0,
                          fontWeight: FontWeight.w500,
                        ),
                      ),
                      const SizedBox(height: 10.0),
                      Text(
                        shopname ?? "Loading...",
                        style: const TextStyle(
                          color: Colors.white,
                          fontSize: 24.0,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ],
                  ),
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    ElevatedButton(
                      onPressed: () => changeBookingType(true),
                      style: ElevatedButton.styleFrom(
                        backgroundColor:
                        isuserSelected ? Colors.orange : Colors.grey,
                      ),
                      child: const Text("Customer Confirmation"),
                    ),
                    const SizedBox(width: 10),
                    ElevatedButton(
                      onPressed: () => changeBookingType(false),
                      style: ElevatedButton.styleFrom(
                        backgroundColor:
                        !isuserSelected ? Colors.orange : Colors.grey,
                      ),
                      child: const Text("Barber Confirm"),
                    ),
                  ],
                ),
                Container(
                  padding: const EdgeInsets.only(
                    top: 20.0,
                    left: 30.0,
                    right: 30.0,
                    bottom: 20.0,
                  ),
                  width: MediaQuery.of(context).size.width,
                  decoration: const BoxDecoration(
                    color: Colors.white,
                    borderRadius: BorderRadius.only(
                      topLeft: Radius.circular(40),
                      topRight: Radius.circular(40),
                    ),
                  ),
                  child: const Center(
                    child: Text(
                      "All Bookings",
                      style: TextStyle(
                        color: Colors.black,
                        fontSize: 24.0,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                ),
                const SizedBox(height: 10.0),
                allBookings(),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

// Custom clipper for the "S"-shaped curve between brown and maroon
class SShapeClipper extends CustomClipper<Path> {
  @override
  Path getClip(Size size) {
    var path = Path();

    path.lineTo(0, size.height * 0.8);
    path.quadraticBezierTo(size.width * 0.3, size.height * 0.9,
        size.width * 0.65, size.height * 0.7);
    path.quadraticBezierTo(
        size.width * 0.85, size.height * 0.6, size.width, size.height * 0.65);
    path.lineTo(size.width, 0);

    path.close();
    return path;
  }

  @override
  bool shouldReclip(CustomClipper<Path> oldClipper) {
    return false;
  }
}
